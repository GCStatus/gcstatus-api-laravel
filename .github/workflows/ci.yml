name: CI

on:
  pull_request:
    types: [opened, edited, synchronize, reopened, ready_for_review]
    branches:
      - "*"
  push:
    branches:
      - main

env:
  DB_DATABASE: database/database.sqlite
  DB_CONNECTION: sqlite

jobs:
  security-check:
    strategy:
      fail-fast: true
      matrix:
        security-checker: [2.1.3]
    runs-on: ubuntu-latest
    name: Running security checker with local-php-security-checker on version ${{ matrix.security-checker }}
    steps:
      - uses: actions/checkout@v4

      - name: Download the security checker binary
        run: |
          curl -L -s https://github.com/fabpot/local-php-security-checker/releases/download/v${{ matrix.security-checker }}/local-php-security-checker_linux_amd64 -o local-php-security-checker
          chmod +x local-php-security-checker

      - name: Run the binary
        run: ./local-php-security-checker

      - name: Cache security checker
        uses: actions/cache@v4
        id: cache-security-checker
        with:
          path: ~/.symfony/cache
          key: ${{ runner.os }}-cache-security-checker

      - name: Check Composer dependencies for vulnerabilities
        if: steps.cache-security-checker.outputs.cache-hit != 'true'
        uses: symfonycorp/security-checker-action@v5

      - name: Run Laravel Security Checker
        run: composer audit

      - name: Run Trivy for container security
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: "fs"
          severity: "HIGH,CRITICAL"
          skip-dirs: "vendor,node_modules"
          skip-files: ".env,*.lock"
          timeout: "5m"
          exit-code: 1

  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php: [8.3]
        laravel: [11.9]
        phpunit: [11]
    name: Tests | PHP ${{ matrix.php }} - Laravel ${{ matrix.laravel }} - PHPUnit ${{ matrix.phpunit }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: xdebug

      - name: Copy .env.testing
        run: php -r "file_exists('.env') || copy('.env.testing', '.env');"

      - name: Cache composer.lock
        uses: actions/cache@v4
        id: composer-cache
        with:
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          path: vendor

      - name: Install Laravel dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Create sqlite dummy database (PHPUnit db)
        run: |
          mkdir -p database
          touch ${{ env.DB_DATABASE }}

      - name: Execute tests before allow merges
        env:
          DB_CONNECTION: ${{ env.DB_CONNECTION }}
          DB_DATABASE: ${{ env.DB_DATABASE }}
        run: composer test:ci

      - name: Upload coverage to Codecov
        if: github.event.pull_request.draft == false
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true
          files: ./coverage.xml

  pint:
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      fail-fast: true
      matrix:
        pint: [1.18.1]
        preset: [psr12]
    name: Laravel Pint | Pint ${{ matrix.pint }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
          ref: ${{ github.head_ref }}
          token: ${{ secrets.PAT }}

      - name: Get last commit message
        id: last-commit-message
        run: |
          echo "msg=$(git log -1 --pretty=%s)" >> $GITHUB_OUTPUT

      - name: Run laravel pint
        uses: aglipanci/laravel-pint-action@2.4
        with:
          preset: ${{ matrix.preset }}
          verboseMode: true
          pintVersion: ${{ matrix.pint }}

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: ${{ steps.last-commit-message.outputs.msg }}
          commit_options: "--amend --no-edit"
          push_options: "--force"
          skip_fetch: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  all_required_checks_passed:
    name: All required checks passed
    runs-on: ubuntu-latest
    needs: [security-check, tests]
    if: contains(github.ref, 'refs/heads/main') != true
    steps:
      - name: Mark PR as ready to merge
        run: exit 0
